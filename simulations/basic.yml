version: "3"
name: "tcdicn-basic"

services:

  node:
    build:
      context: ..
      dockerfile_inline: |
        FROM python
        RUN pip install cryptography
        COPY tcdicn.py examples/node.py .
        CMD python3 -c "import random, time; time.sleep(random.uniform(0, 5))"; exec python3 node.py
    environment:
      TCDICN_PORT: $TCDICN_PORT
      TCDICN_DPORT: $TCDICN_DPORT
      TCDICN_TTL: $TCDICN_TTL
      TCDICN_TPF: $TCDICN_TPF
      TCDICN_GROUP: $TCDICN_GROUP
      TCDICN_VERBOSITY: $TCDICN_VERBOSITY

  sensor:
    build:
      context: ..
      dockerfile_inline: |
        FROM python
        RUN pip install cryptography
        COPY tcdicn.py examples/sensor.py .
        CMD python3 -c "import random, time; time.sleep(random.uniform(0, 5))"; exec python3 sensor.py
    environment:
      TCDICN_ID: my_cool_sensor
      TCDICN_PORT: $TCDICN_PORT
      TCDICN_DPORT: $TCDICN_DPORT
      TCDICN_TTL: $TCDICN_TTL
      TCDICN_TPF: $TCDICN_TPF
      TCDICN_GROUP: $TCDICN_GROUP
      TCDICN_VERBOSITY: $TCDICN_VERBOSITY

  actuator:
    build:
      context: ..
      dockerfile_inline: |
        FROM python
        RUN pip install cryptography
        COPY tcdicn.py examples/actuator.py .
        CMD python3 -c "import random, time; time.sleep(random.uniform(0, 5))"; exec python3 actuator.py
    environment:
      TCDICN_ID: my_cool_actuator
      TCDICN_PORT: $TCDICN_PORT
      TCDICN_DPORT: $TCDICN_DPORT
      TCDICN_TTL: $TCDICN_TTL
      TCDICN_TPF: $TCDICN_TPF
      TCDICN_TTP: $TCDICN_TTP
      TCDICN_GROUP: $TCDICN_GROUP
      TCDICN_GET_TTL: $TCDICN_GET_TTL
      TCDICN_GET_TPF: $TCDICN_GET_TPF
      TCDICN_GET_TTP: $TCDICN_GET_TTP
      TCDICN_VERBOSITY: $TCDICN_VERBOSITY
